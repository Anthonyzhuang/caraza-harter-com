# expression overview(s)
 - variable: like a box in the worksheets
 - expression: combination of values, variables, and operands (been using these)

# basic assignment (d)
x = 2
print(x)
x
x + 1
x
2 = x            # syntax ERROR!

# need to assign before using
print(y)         # runtime ERROR! (NameError is an example of a runtime error)
y = 3
print(y)
x * y
x ^ 2            # semantic ERROR! (runs but gives wrong output, assuming I wanted an exponent)
                 # bitwise exclusive or, not necessary for us to learn in CS 301

# types of errors(s)

# sometimes write backwards temporarily to do algebra without paper

# forwards
interest_percent = 10
yearly_mult = 1 + interest_percent / 100
years = 5
start = 100
final = start * yearly_mult**years

# backwards
(final/start) ** (1/years) = yearly_mult
(yearly_mult - 1) * 100 = interest_percent

========================================

# string operations
first = 'tyler'
last = 'caraza-harter'
name = first + last
first * last
first - last
first / last
'HA ' * 10

# boolean operations
valid = 0 < x < 100
print('you may continue: ' + valid)
print('you may continue: ' + str(valid))

# assignment vs equality (d)
x
y
y > x
y = x
x
y
x == y
x = 2
x == y

========================================

# naming rules
n = 1
class = 301 # keyword!
class_301 = 'awesome'
301class = 'awesome'
hey! = 'nope'
_test = 1
Ã± = 1

# naming rules(s)

========================================

# state diagrams, PythonTutor
 - do trivial example
 - example of a comment
   - notice the red arrow  (flow of execution)
   - notice the semi-boxes (state)
   - we added output
 - do example 1 from pseudocode worksheet (in Python)
   - it's a reassignment!
 - do example 2 from pseudocode worksheet (in Python)
 - do example 3 from pseudocode worksheet (in Python)

# syntactic sugar (*=, etc)
 - do example 3, example 1, and example 2 again with += and *=

========================================

# absolute value
a = ((x) ** 2) ** (0.5)

# volume of sphere given radius:
 - volume = 4/3 * PI * radius^3 (in book)
 - how to work backwards?

# quadratic formula
 - positive only
 a = 3
 b = 2
 c = -1
 numerator = -b + (b**2 - 4*a*c) ** (1/2)
 denominator = 2 * c
 x = numerator / denominator
 a*(x**2) + b*(x) + c
 - negative
 - make it imaginary, talk about that

========================================

# visualize bars with characters (d)
 - linear growth
 - exponential growth

# boxes (d)
 - '\n' is newline
 - print('hello', end='')
 - print('hello', end='\n\n')
 - solid box
 - checkered box
 - checkered box with border

========================================

# PythonTutor input(d)
 - give example of input("prompt")
 - example of cast
 - in PythonTutor and in terminal
