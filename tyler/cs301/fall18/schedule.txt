################################################################################
# PART 1
################################################################################

No Class

=
Introduction
* Class Overview
* Hardware
* Software
<a href="materials/lec-01.pdf">Link to Slides</a>

=
The Terminal
* Terminal Emulatation
* Shells
* Navigation
* Program Execution
<a href="materials/lec-02.pdf">Link to Slides</a>

=
Bits and Memory
* Bits+bytes
* Memory organization
* Representing information as bits
<a href="materials/lec-03.pdf">Link to Slides</a>

=
Computation
* Pseudocode
* State
* Flow of Execution

<b>Due</b>: P0 (ungraded)

=
Programming

* Syntax+Parsing
* Values+Types
* Calculation+Operators
<b>Read</b>: Downey Ch 1

=
Vars and Exprs

* Interactive vs. Script Mode, print
* Naming Rules
* Assignment
* Types of errors
* Comments

<b>Read</b>: Downey Ch 2

=
Using Functions

* Functions
* input, str funcs, float funcs
* Arguments, Return Values
* Importing Modules
* Math Module

<b>Read</b>: Downey Ch 3 (pgs 21-23)<br>
<b>Due</b>: P1

=
Creating Functions

* Parameters
* Scope: Local vs. Global
* Stack Diagrams
* Functions Type
* TODO: diff materials about return values

<b>Read</b>: Downey Ch 3 (pgs 23-30) and Ch 6 (pg 61)

=
Conditions

* Boolean Logic
* if,elif,else
* Reading Nested Code
* True and "Truthy"
* Modular arithmetic

<b>Read</b>: Downey Ch 5 (pgs 47-51, 54-60)<br>
<b>Optional</b>: Downey Ch 4

=
Iteration
* Reassignment
* While Loop
* Infinite Iteration

<b>Read</b>: Downey Ch 7<br>
<b>Due</b>: P2

=
Advanced Iteration
* Break
* Continue

=
Strings

* Indexing/Slicing
* Sequences
* For Loop, range()
* Searching
* Comparison
* String formatting

<b>Read</b>: Downey Ch 8<br>
<b>Optional</b>: Downey Ch 9

=
Slack Day
<b>Due</b>: P3

=
Exam 1

################################################################################
# PART 2
################################################################################

=
Lists
* Sequence, Like a String
* Indexing, Slicing
* sys.argv, dir()
* Mutable vs. Immutable
* List Methods

<b>Read</b>: Downey Ch 10 (pgs 107-111)<br>

=
CSV Tables
* Headers
* Sorting
* Aggregation
* Escaping
<b>Due</b>: P4

=
Recursion

* Base/Resursive Cases
* Lists of Lists
* Web Crawling
* More Stack Diagrams
* Stack Overflow

<b>Read</b>: Downey Ch 5 (pgs 51-54), Ch 6

=
Generators
* "yield" Syntax
* Execution Flow

<b>Read</b>: Downey Ch 10 (pgs 111-112) and Ch 19 (pgs 224-225)<br>
<b>Due</b>: P5

=
Objects
* namedtuple and recordclass
* Mutability
* References
* Python Tutor

<b>Read</b>: Downey Ch 10 (pgs 114-123) and TODO (namedtuple, etc)<br>

=
Dictionaries
* TODO

=
JSON
* Deserialization
* Serialization
* Pretty Printing

=
Copying
* References
* Shallow Copy
* Deep Copy

<b>Read</b>: Downey Ch 11<br>

<b>Read</b>: TODO<br>
<b>Due</b>: P6

=
Files and Directories

=
Error Handling
* Catching Exceptions
* Throwing Exceptions
* Asserts

=
Database 1
* schemas/types
* queries
* where
* sqlite
<b>Due</b>: P7

=
Database 2
* group by
* aggregates
* inserts

=
Database 3
* sqlite3 library
* accessing DBs in Python

=
Slack Day
<b>Due</b>: P8

=
Exam 2

################################################################################
# PART 3
################################################################################

=
Numpy
* Arrays
* Element-Wise Operations
* Matrix Multiplication

=
Plotting
* matplotlib
* Line, Bar, and Scatter Plots
* Axes and Annotations
<b>Due</b>: P9

=
Notebooks
* iPython
* Interactive Plotting

=
Tracing 1
* Trace Collection
* Wrappers with *args and **kwargs
* Decorators

=
Tracing 2
* Date/Time Types
* Plotting Timeseries Data
<b>No Project Due</b>

=
Thanksgiving Break

=
Web Content
* urllib Module
* Downloading Pages
* RPCs

=
HTML
* General Syntax
* Tables
* Generating
* Parsing
<b>Due</b>: P10

=
Approximation
* Derivatives
* Integrals

=
Simulation
* Randomness
* Seeding
* Distributions
* Monte Carlo

=
Markov Chains
* Simple Modeling
* Inference
* Prediction
<b>Due</b>: P11<br>
<b>Read</b>: <a href="http://setosa.io/ev/markov-chains">http://setosa.io/ev/markov-chains</a>

=
Hypothesis Testing
* Simulated p-values
<b>Watch:</b> <a href="https://www.khanacademy.org/math/ap-statistics/tests-significance-ap/idea-significance-tests/v/estimating-p-value-from-simulation">Video</a>

=
Slack Day

=
Review
<b>Due</b>: P12
