################################################################################
# PART 1
################################################################################

No Class

=
Machine Org

* CPU/Memory/Devices
* File System
* Network

=
UNIX Shell

* Bash, Navigation
* Programs+Arguments
* Pipes+Redirects
* Bash Scripts

=
Memory

* Bits+Bytes
* Addresses
* Numbers+Text

=
Computation

* Registers
* Instructions
* Pseudocode

<b>Due</b>: P0 (ungraded).

=
Programming

* Syntax+Parsing
* Values+Types
* Calculation+Operators
<b>Read</b>: Downey Ch 1.

=
Vars and Exprs

* Interactive vs. Script Mode, print
* Naming Rules
* Assignment
* Types of errors
* Comments

<b>Read</b>: Downey Ch 2.

=
Using Functions

* Functions
* input, str funcs, float funcs
* Arguments, Return Values
* Importing Modules
* Math Module

<b>Read</b>: Downey Ch 3 (pgs 21-23).<br>
<b>Due</b>: P1.

=
Creating Functions

* Parameters
* Scope: Local vs. Global
* Stack Diagrams
* Functions Type
* TODO: diff materials about return values

<b>Read</b>: Downey Ch 3 (pgs 23-30) and Ch 6 (pg 61).

=
Conditions

* Boolean Logic
* if,elif,else
* Reading Nested Code
* True and "Truthy"
* Modular arithmetic

<b>Read</b>: Downey Ch 5 (pgs 47-51, 54-60).<br>
<b>Optional</b>: Downey Ch 4.

=
Iteration

* Reassignment
* While Loop
* Infinite Iteration
* Break/Continue

<b>Read</b>: Downey Ch 7.<br>
<b>Due</b>: P2.


=
Strings

* Indexing/Slicing
* Sequences
* For Loop, range()
* Searching
* Comparison
* String formatting

<b>Read</b>: Downey Ch 8.<br>
<b>Optional</b>: Downey Ch 9.

=
Simple Graphics
* Lines
* Squares
* Circles

=
Slack Day

=
Exam 1

################################################################################
# PART 2
################################################################################

=
Lists
* Sequence, Like a String
* Indexing, Slicing
* sys.argv, dir()
* Mutable vs. Immutable
* List Methods

<b>Read</b>: Downey Ch 10 (pgs 107-111).<br>

=
CSV, tables

TODO

=
Recursion

* Base/Resursive Cases
* Lists of Lists
* Web Crawling
* More Stack Diagrams
* Stack Overflow

<b>Read</b>: Downey Ch 5 (pgs 51-54), Ch 6.

=
Functional Prog. w/ Lists
* Anonymous Functions (lambdas)
* Map, Filter, Sum, Max, Min
* Sorting
* List Comprehensions

<b>Read</b>: Downey Ch 10 (pgs 111-112) and Ch 19 (pgs 224-225).<br>

=
Objects
* object, namedtuple, recordclass
* references
* object arguments
* deep/shallow copy

<b>Read</b>: Downey Ch 10 (pgs 114-123) and TODO (namedtuple, etc).<br>

=
Dictionaries
* Dictionary Comprehensions
* TODO

<b>Read</b>: Downey Ch 11.<br>

=
JSON
* Deserialization
* Serialization
* Pretty Printing

<b>Read</b>: TODO.<br>

=
Flexible Args
* *args
* **kwargs
* wrappers

=
Files and Directories

=
Error Handling
* Catching Exceptions
* Throwing Exceptions
* Asserts

=
Web Content
* urllib Module
* Downloading Pages
* RPCs

=
HTML
* General Syntax
* Tables
* Generating
* Parsing

################################################################################
# PART 3
################################################################################

=
Plotting

=
Tracing
* Date/Time Types
* Collecting Logs
* Parsing Logs
* Plotting Time Data

=
Simulation
* Randomness
* Seeding
* Distributions
* Monte Carlo Simulation

=
Hypothesis Testing
* Simulated p-values
* <b>Watch:</b> <a href="https://www.khanacademy.org/math/ap-statistics/tests-significance-ap/idea-significance-tests/v/estimating-p-value-from-simulation">Video</a>

=
Markov Models
* Inference
* Prediction

=
Jupyter Notebook

=
Numpy

=
Slack

=
Thanksgiving Break
