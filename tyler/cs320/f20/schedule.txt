################################################################################
# PART 1
################################################################################

=
No Class

=
Reproducibility 1
* Course Overview
* Hardware, OS, Interpreters
<b>Read</b>: <a href="syllabus.html">Syllabus</a><br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab1">WEEKLY LAB: Cloud Setup</a><br>
<a href="materials/lec-01.pdf">SLIDES</a><br>

=
Reproducibility 2
* versioning
* git
<b>Read</b>: <a href="https://product.hubspot.com/blog/git-and-github-tutorial-for-beginners">Git Tutorial</a><br>
<a href="materials/lec-02.pdf">SLIDES</a><br>

=
No Class
* Labor Day

=
Quantifying Perf 1
* check_output
* time
#<a href="lectures/lec3-morning.ipynb">LECTURE NB</a><br>
<b>Read</b>: <a href="reading/lec3-measuring-perf.html">HTML</a>, <a href="reading/lec3-measuring-perf.ipynb">NB</a><br>
QUIZ 1 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab2">WEEKLY LAB: Git Practice</a><br>
<b>Released:</b> <a href="https://github.com/tylerharter/cs320/tree/master/f20/p1">P1 (perf measurements)</a>

=
Quantifying Perf 2
* complexity analysis
* Big O
#<a href="lectures/lec4-big-o-start.ipynb">LECTURE NB STARTER</a><br>
<b>Read</b>: <a href="http://greenteapress.com/thinkpython2/html/thinkpython2022.html">Think Python Appendix B (except B.4)</a><br>
<a href="materials/lec-04.pdf">SLIDES</a><br>

=
Quantifying Perf 3
* practice
<a href="materials/lec-05-worksheet.key.pdf">WORKSHEET</a><br>
<a href="materials/lec-05-worksheet-answers.key.pdf">ANSWERS</a><br>
<a href="materials/lec-05.html">EXAMPLES</a><br>
QUIZ 2 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab3">WEEKLY LAB: Complexity</a><br>

=
OOP 1: Classes
* attributes
* methods
* constructors
<b>Read</b>: <a href="https://greenteapress.com/wp/think-python-2e/">Think Python 15 + 17.1 - 17.5</a><br>
<b>Optional</b>: <a href="https://greenteapress.com/wp/think-python-2e/">Think Python 16</a><br>
<a href="materials/lec-06.pdf">SLIDES</a><br>

=
OOP 2: <span style="font-size:90%">Special Methods</span>
* __str__, __repr__, _repr_html_
* __eq__, __lt__
* __len__, __getitem__
* __enter__, __exit__
<a href="lectures/lec7-tests.txt">TEST CASES</a><br>
<b>Read</b>: <a href="https://greenteapress.com/wp/think-python-2e/">Think Python 17.6 - 17.12</a><br>
<b>Optional</b>: <a href="https://docs.python.org/3/reference/datamodel.html">Python Data Model</a><br>
<a href="materials/lec-07.pdf">SLIDES</a><br>

=
OOP 3: Inheritance
* method resolution order
* overriding methods
* calling overridden methods
#<a href="lectures/lec8-inheritance-start.ipynb">LECTURE NB STARTER</a><br>
<b>Read</b>: <a href="https://greenteapress.com/wp/think-python-2e/">Think Python 18</a><br>
<a href="materials/lec-08.pdf">SLIDES</a><br>
QUIZ 3 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab4">WEEKLY LAB: Zips</a><br>

=
Multiple Inheritance
* MRO rules
* recursion
<b>Due:</b> P1<br>
<b>Released:</b> <a href="https://github.com/tylerharter/cs320/tree/master/f20/p2">P2 (trees)</a>
<a href="materials/lec-09-worksheet.key.pdf">WORKSHEET</a><br>

=
Recursion
* functions that return something
* functions that do something

=
Graphs and Tree Intro
* types of graph
* graphviz
<b>Read</b>: <a href="reading/lec-11-graphs.html">HTML</a><br>
QUIZ 4 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab5">WEEKLY LAB: Linked Lists</a><br>

=
Trees 1
* trees
* binary trees
* binary search trees (BSTs)
<b>Read</b>: <a href="reading/lec-12-search-trees.html">HTML</a><br>

=
Trees 2
* implementing dictionaries with BSTs
* graph search
<b>Read</b>: <a href="reading/lec-13-dict-graph-search.html">HTML</a><br>
<a href="materials/lec-13.pdf">SLIDES</a><br>

=
Graph Search 1
* depth-first search
<a href="materials/lec-14.pdf">SLIDES</a><br>
<b>Read</b>: <a href="reading/lec-14-bfs.html">HTML</a><br>
QUIZ 5 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab6">WEEKLY LAB: BSTs</a><br>

=
Graph Search 2
* breadth-first search
<a href="materials/lec-15.pdf">SLIDES</a><br>
<b>Due:</b> P2<br>
<b>Released:</b> <a href="https://github.com/tylerharter/cs320/tree/master/f20/p3">P3 (crawler)</a><br>

=
Web 1: Selenium
* advanced web scraping
<a href="materials/lec-16.pdf">SLIDES</a><br>
<b>Read</b>: Selenium with Python, <a href="https://selenium-python.readthedocs.io/getting-started.html">Ch 2</a><br>
<a href="https://tyler.caraza-harter.com/cs320/f20/materials/lec-16/scrape.html">TRICKY PAGES</a><br>

=
Web 2: Recursive Crawl
* BFS for webpages
<a href="lectures/lec-17/practice.html">CRAWL PRACTICE</a><br>
QUIZ 6 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab7">WEEKLY LAB: DFS vs. BFS</a><br>

=
Web 3: Flask
* review from CS 220
* RPC, POST
* decorators
<a href="materials/lec-18.pdf">SLIDES</a><br>
#<a href="materials/lec-18-examples.ipynb">DECORATOR EXAMPLES</a><br>

=
Web 4: Logging, Rate Limiting, and robots.txt
* wrappers based on *args and **kwargs*
* robots.txt
* HTTP 429
<b>Read</b>: <a href="https://www.robotstxt.org/orig.html#examples">robots.txt examples</a>, <a href="https://tools.ietf.org/html/rfc6585#section-4">HTTP 429</a><br>
# <b>Read</b>: Think Python, Ch 12.4 and 19.9<br>
<a href="materials/lec-19.html">Interactive Exercises</a><br>

=
Web 5: A/B testing
* data collection
* significance
<a href="materials/lec-20.pdf">SLIDES</a><br>
<b>Read</b>: <a href="https://techcrunch.com/2014/06/29/ethics-in-a-data-driven-world/">The Morality of A/B Testing (TechCrunch article)</a><br>
<b>Due:</b> P3<br>
<b>Released:</b> <a href="https://github.com/tylerharter/cs320/tree/master/f20/p4">P4 (website)</a><br>
QUIZ 7 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab8">WEEKLY LAB: Web</a><br>

=
Regex 1
* character classes
* repetition
* anchoring
<a href="materials/lec-21.pdf">SLIDES</a><br>
<b>Read</b>: <a href="https://www.textbook.ds100.org/ch/08/text_intro.html">DS100 Ch 8</a><br>

=
Regex 2
* findall, sub, groups

=
Visualization 1
* dashboards
QUIZ 8 DUE<br>
WEEKLY LAB: regex<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab9">WEEKLY LAB: Regex</a><br>

=
Visualization 2
* matplotlib coordinate systems
* drawing custom lines/polygons

=
Visualization 3
* geographic maps
* shapefiles
* high resolution graphics
<b>Due:</b> P4<br>
<b>Released:</b> <a href="https://github.com/tylerharter/cs320/tree/master/f20/p5">P5 (trace analysis)</a><br>

=
Visualization 4
* shapely
* animations
QUIZ 9 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab10">WEEKLY LAB: Geo Maps</a><br>

=
Visualization 5
* big example
* animated map of incidents scraped from Madison Fire Department

=
Linear Algebra 1
* machine learning overview
* numpy arrays
* image manipulation
<a href="materials/lec-28.pdf">SLIDES</a><br>
<b>Read</b>: <a href="http://scipy-lectures.org/intro/numpy/array_object.html">Scipy Notes</a><br>

=
Linear Algebra 2
* matrix multiplication basics
* equation solving
QUIZ 10 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab11">WEEKLY LAB: Dot Product</a><br>

=
Linear Algebra 3
* linear combinations
* column spaces
<b>Due:</b> P5<br>
<b>Released:</b> P6 (land matrices and regression)

=
Linear Algebra 4
* projection matrices
* fit lines
* loss functions

=
Linear Algebra 5
* fitting non-linear data
* correlation matrices
QUIZ 11 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab12">WEEKLY LAB: JOIN and Counting</a><br>

=
Linear Algebra 6
* principal component analysis

=
Supervised Learning 1
* classification
* train+test split

=
Supervised Learning 2
* sklearn Pipeline
* custom classifiers+transformers
QUIZ 12 DUE<br>
<a href="https://github.com/tylerharter/cs320/tree/master/f20/lab13">WEEKLY LAB: Decision Boundaries</a><br>

=
Supervised Learning 3
* confusion matrices
* precision and recall
* multi-class logistic regression
<b>Due:</b> P6<br>
<b>Released:</b> P7 (sklearn)

=
No Class
* Happy Thanksgiving!

=
Supervised Learning 4
* categorical inputs
* one-hot encoding
QUIZ 13 DUE<br>
WEEKLY LAB: TODO<br>
<a href="materials/lec-36.pdf">SLIDES</a><br>

=
Unsupervised Learning
* k-means

=
Parallelism 1
* multiprocessing pools
* parallel map

=
Parallelism 2
* pytorch
QUIZ 14 DUE<br>
NO LAB

=
Optimization
* gradient descent
* least squares
<b>Due:</b> P7<br>

=
No Class
* Study Day
